# Kubernetes deployment for Physics-Informed Sentiment Analyzer
# Production-ready with auto-scaling, health checks, and multi-region support

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-analyzer
  namespace: sentiment-analysis
  labels:
    app: sentiment-analyzer
    version: v1.0.0
    component: api
    part-of: physics-sentiment-system
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sentiment-analyzer
  template:
    metadata:
      labels:
        app: sentiment-analyzer
        version: v1.0.0
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sentiment-analyzer-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: sentiment-analyzer
        image: ghcr.io/yourusername/physics-sentiment-analyzer:v1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: DIFFHE_ENV
          value: "production"
        - name: DIFFHE_LOG_LEVEL
          value: "INFO"
        - name: DIFFHE_API_PORT
          value: "5000"
        - name: DIFFHE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: sentiment-analyzer-secrets
              key: secret-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: sentiment-analyzer-secrets
              key: redis-url
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sentiment-analyzer-secrets
              key: database-url
        - name: DIFFHE_MAX_BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: sentiment-analyzer-config
              key: max-batch-size
        - name: DIFFHE_CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: sentiment-analyzer-config
              key: cache-ttl
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        volumeMounts:
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        - name: models-volume
          mountPath: /app/models
          readOnly: true
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 500Mi
      - name: models-volume
        configMap:
          name: sentiment-models-config
      - name: config-volume
        configMap:
          name: sentiment-analyzer-config
      nodeSelector:
        kubernetes.io/arch: amd64
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sentiment-analyzer
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: sentiment-analyzer-service
  namespace: sentiment-analysis
  labels:
    app: sentiment-analyzer
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: sentiment-analyzer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentiment-analyzer-config
  namespace: sentiment-analysis
data:
  max-batch-size: "100"
  cache-ttl: "3600"
  rate-limit: "1000"
  supported-languages: "en,es,fr,de,it,pt,ru,zh,ja,ko"
  physics-models: "physics_informed,diffusion,conservation,quantum,thermodynamic"
  log-format: "json"
  metrics-enabled: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: sentiment-analyzer-secrets
  namespace: sentiment-analysis
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  secret-key: ZGV2LXNlY3JldC1wbGVhc2UtY2hhbmdl  # dev-secret-please-change
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==  # redis://redis-service:6379/0
  database-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9zZW50aW1lbnRfZGI=

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sentiment-analyzer-hpa
  namespace: sentiment-analysis
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sentiment-analyzer
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sentiment-analyzer-ingress
  namespace: sentiment-analysis
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.sentiment-analyzer.com
    secretName: sentiment-analyzer-tls
  rules:
  - host: api.sentiment-analyzer.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sentiment-analyzer-service
            port:
              number: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sentiment-analyzer-sa
  namespace: sentiment-analysis
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/SentimentAnalyzerRole

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sentiment-analyzer-pdb
  namespace: sentiment-analysis
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sentiment-analyzer

---
apiVersion: v1
kind: Namespace
metadata:
  name: sentiment-analysis
  labels:
    name: sentiment-analysis
    istio-injection: enabled